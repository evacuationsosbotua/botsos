import logging 
from aiogram import Bot, Dispatcher, executor, types
# import markups as nav

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "5110637683:AAFxV4HSpgsfwBGeX-FtlzORA1o9DVi1KKE" 

bot = Bot(token = TOKEN)
dp = Dispatcher(bot)



#buttons 

urlButtons = InlineKeyboardMarkup(row_width=1)
sendFormButton = InlineKeyboardButton(text='üìù –ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤—É –Ω–∞ –µ–≤–∞–∫—É–∞—Ü—ñ—é üìù', url='https://forms.gle/EMBTYZ8KKhCA5hwo8')
liveChatButton = InlineKeyboardButton(text='üí¨ –ñ–∏–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ üí¨', url='https://t.me/evacuation_war')
urlButtons.add(sendFormButton, liveChatButton)

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
	await message.answer_photo('https://1944718.artcoco.web.hosting-test.net/evacuation_post.png')
	await bot.send_message(message.from_user.id, '–í—ñ—Ç–∞—î–º–æ!üá∫üá¶üá∫üá¶üá∫üá¶\n\n–í–∏ –∑–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç—É —Ü–µ–Ω—Ç—Ä—É –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ "–ï–≤–∞–∫—É–∞—Ü—ñ—è".\n\n–Ø–∫—â–æ –í–∏ –∞–±–æ –í–∞—à —Ä–æ–¥–∏—á –ø–æ—Ç—Ä–µ–±—É—î –Ω–µ–≥–∞–π–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –∑ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–Ω—è, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É –∑–∞–∑–Ω–∞—á–∏–Ω—É –Ω–∏–∂—á–µ —ñ –º–∏ –Ω–µ–æ–¥–º—ñ–Ω–Ω–æ –Ω–∞–¥–∞–º–æ –¥–æ–ø–æ–º–æ–≥—É!'.format(message.from_user), reply_markup = urlButtons)
	# await message.reply("Hi!\nI'm EchoBot!\nPowered by aiogram.")

@dp.message_handler()
async def bot_message(message: types.Message):
	#await bot.send_message(message.from_user.id, message.text)
	if message.text != '/start':
		await bot.send_message(message.from_user.id, '–í–∏–±–∞—á—Ç–µ! \n –ê–ª–µ –º–∏ –Ω–µ –∑–º–æ–≥–ª–∏ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏ –í–∞—à –∑–∞–ø–∏—Ç. \n –°–∫–æ—Ä–∏—Å—Ç–∞–π–µ—Ç—Å—å –∫–æ–º–∞–Ω–¥–æ—é /start')


if __name__ == '__main__':
	executor.start_polling(dp, skip_updates = True)